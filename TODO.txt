Current list of ideas to improve/update GET_HOMOLOGUES:

* add test to count number of seqs in clusters and compare it to initial
  This might confuse users as will only make sense with -t 0, which is not default

* Speed-up/paralellize marfil_homology::blast_parse. This can be done by:
  a) port sub to C++
  b) do parsing in parallel splitting (sorted) infile in chunks without braking consecutive HSPs
  Read: http://blogs.perl.org/users/kirk_kimmel/2012/09/text-processing-divide-and-conquer.html

* Add slurm support to -m cluster
  Read: https://github.com/mauranolab/sge2slurm , http://hpc.mines.edu/bluem/interactive.html ,
  https://srcc.stanford.edu/sge-slurm-conversion , https://srcc.stanford.edu/sge-slurm-conversion ,
  http://genomics.princeton.edu/support/grids/slurm.shtml
  
* Add flag to take into account synteny/gene order in input FASTA files for EST
   + optionally read in .gff/.gtf file matching ids in .fna
	+ for pairs_i,j of sequences sets with GFF remove non-syntenic BLAST hits
		* http://dagchainer.sourceforge.net , https://academic.oup.com/bioinformatics/article/20/18/3643/202025
		* check +-2 neighbors, will fail with indel genes 
		* diff chr heuristic, assumes chr names are known & conserved, wont work with translocations 
		* do dyn prog to match ids_i to ids_j allowing indels 
   + Buscar segmentos synt con Blastn desde FASTA ordenados , bench con brassicas?
	+ https://www.ensembl.org/info/genome/compara/Ortholog_qc_manual.html

* Print clusters in pangenome matrix (PGM) sorted by their (consensus) physical/genetic position

* Compute tree determinants of PGM

* Script to produce VCF/MFA after parsing sorted DNA clusters 

* Add alternatives to NCBI blastn: minimap2 simulating bitscore & E-value
  Local tests show minimap alignments are shorter: https://bioinfoperl.blogspot.com/2018/08/minimap2-vs-blastn.html

* Add taxon names to tmp/blast.bpo file 

* Add evidences to produced clusters

* Improve graphical output and help users with external users
  Read: https://bmcgenomics.biomedcentral.com/track/pdf/10.1186/1471-2164-15-8 , 
  http://higlass.io/

* Consider other clustering algorithms
  OrthoFinder: local tests so far @ https://github.com/eead-csic-compbio/get_homologues/tree/master/user_utils/normalize
  Read: https://academic.oup.com/bioinformatics/advance-article/doi/10.1093/bioinformatics/bty669/5063405

